{
  "name": "Project Manager VA",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -880,
        -64
      ],
      "id": "b79ff390-104d-45af-9bdc-08c5bd080ae3",
      "name": "Telegram Trigger",
      "webhookId": "b55619b2-54b5-402c-8fce-43ae55d9de60",
      "credentials": {
        "telegramApi": {
          "id": "n7XUVSf0KI1STvBg",
          "name": "Telegram PM assistant"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/bot8208940765:AAGCfU4hWLqlhiAcDZdF_LCeKUBZ9lMaY7Y/getFile?file_id={{$json.message.voice.file_id}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -672,
        -64
      ],
      "id": "e3a5a3c3-93c7-45e2-879f-c90fecfb6bb7",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/file/bot8208940765:AAGCfU4hWLqlhiAcDZdF_LCeKUBZ9lMaY7Y/{{$json.result.file_path}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -464,
        -64
      ],
      "id": "feda1ff1-c811-4438-af70-a79b0577fcdb",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "translate",
        "binaryPropertyName": "=data",
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -176,
        -80
      ],
      "id": "837502a5-40de-4bc6-a8fe-2cff44f847c1",
      "name": "Translate a recording",
      "credentials": {
        "openAiApi": {
          "id": "2wHy0lNuUCKzFcgt",
          "name": "OpenAI GLPG"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        416,
        64
      ],
      "id": "755d7fc5-49a2-4e92-bff9-fede0a491594",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "wXL6JuUpQ3v2JR2p",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a personal business assistant that helps manage calendar events, tasks, team coordination, and employee availability.\n\nInput: {{ $json.text }}\n\nYou receive voice commands that have been transcribed and translated to English. Your job is to:\n\n1. **For meeting/calendar requests:**\n   - Create calendar events using the Google Calendar tool\n   - Set reasonable durations (default 1 hour for meetings, 30 min for calls)  \n   - Use today's date if no date specified\n   - Convert relative time references (tomorrow = +1 day, next week = +7 days, etc.)\n   - Include attendees if mentioned\n   - Format time properly for PKT timezone\n\n2. **For task requests:**\n   - Acknowledge the task creation request\n   - Explain what task would be created\n   - If this was meant for Jira, mention that task management integration is available\n\n3. **For status requests:**\n   - Check calendar for today's events\n   - Provide helpful summaries of upcoming meetings\n   - List relevant information clearly\n\n4. **For availability/team status requests:**\n   - Use the Jibble API to check which team members are clocked in/out\n   - Provide a clear list of who's available and who's not\n   - Respond to queries like \"who's available now?\", \"who's working?\", \"is [person] available?\"\n   - Show clock-in times for available members when relevant\n   - For unavailable members, indicate if they're on break or clocked out\n   - If someone asks about a specific person, focus just on their status\n\n**Important guidelines:**\n- ALWAYS use the available tools when appropriate (Google Calendar for scheduling, Jibble for availability)\n- Confirm what action you're taking\n- Use business-appropriate event titles\n- If time is ambiguous, make reasonable assumptions (9 AM for morning, 2 PM for afternoon)\n- Default meeting duration: 1 hour\n- Default call duration: 30 minutes\n- Today's date: {{ $now.format('YYYY-MM-DD') }}\n\n**Common Urdu/English business terms:**\n- \"jaldi se\" = urgent/quickly  \n- \"kar do\" = please do it\n- \"standup\" = daily team meeting\n- \"call karo\" = make a call/schedule call\n- \"meeting schedule karo\" = schedule a meeting\n- \"kaun available hai\" = who's available\n- \"team status\" = check team availability\n- \"kaun online hai\" = who's online/working\n\n**Current timezone:** Asia/Karachi (PKT)\n\n**Examples:**\n- Input: \"Schedule standup tomorrow 9 AM\" → Create \"Daily Standup\" event tomorrow 9:00-10:00 AM\n- Input: \"Client call Friday 3 PM\" → Create \"Client Call\" event Friday 3:00-3:30 PM  \n- Input: \"Meeting kar do next Monday 10 AM\" → Create \"Meeting\" event next Monday 10:00-11:00 AM\n- Input: \"Kaun available hai?\" → Check Jibble for clocked-in team members and list who's available\n- Input: \"Is Ali working right now?\" → Check Jibble specifically for Ali's status\n- Input: \"Team status batao\" → Check and report who's clocked in/out and their status\n\nProcess this command and take the appropriate action using available tools:",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        496,
        -176
      ],
      "id": "ffae4b58-144e-4686-adaf-8376d4757ef0",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $json.output }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        848,
        -176
      ],
      "id": "0117d49f-4d85-4e67-870b-d6adb300846b",
      "name": "Generate audio",
      "credentials": {
        "openAiApi": {
          "id": "2wHy0lNuUCKzFcgt",
          "name": "OpenAI GLPG"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1056,
        -176
      ],
      "id": "ec8464f3-537b-4eb9-b069-d9e7e9b32b91",
      "name": "Send an audio file",
      "webhookId": "8b85db70-9865-490b-939a-1b2348831039",
      "credentials": {
        "telegramApi": {
          "id": "n7XUVSf0KI1STvBg",
          "name": "Telegram PM assistant"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "support@agentumai.tech",
          "mode": "list",
          "cachedResultName": "support@agentumai.tech"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1296,
        160
      ],
      "id": "e190368c-1909-40fc-b1a6-d00ef476df09",
      "name": "Create an event in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "yA4peFA9FJQI9HrL",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "url": "= https://time-tracking.prod.jibble.io/v1/People",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "$filter",
              "value": "isActive eq true"
            },
            {
              "name": "$select",
              "value": " id,fullName"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1088,
        288
      ],
      "id": "40a8e92b-cd20-48f2-83e7-dc9e5bf2a419",
      "name": "Check Jibble Availability",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MeSvZ2p60bFA2DdK",
          "name": "Header Auth account 2"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "project": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "issueType": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.jiraTool",
      "typeVersion": 1,
      "position": [
        928,
        272
      ],
      "id": "7e0cd859-8c54-428b-8c05-040ec1755b75",
      "name": "Create an issue in Jira Software",
      "disabled": true
    },
    {
      "parameters": {
        "resource": "block",
        "blockId": {
          "__rl": true,
          "value": "https://www.notion.so/Abdullah-s-To-Do-2373153127a880d18bbfee7f41701dfe?v=2373153127a881db9586000c4527d981&source=copy_link",
          "mode": "url"
        },
        "blockUi": {
          "blockValues": [
            {
              "type": "to_do",
              "checked": true,
              "richText": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('blockValues0_Rich_Text', ``, 'boolean') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        608,
        272
      ],
      "id": "5b534fc2-c866-42c3-903b-134976b3362a",
      "name": "Append a block in Notion",
      "credentials": {
        "notionApi": {
          "id": "0oqLTxSHFO2Peyee",
          "name": "Notion account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "block",
        "operation": "getAll",
        "blockId": {
          "__rl": true,
          "value": "https://www.notion.so/Abdullah-s-To-Do-2373153127a880d18bbfee7f41701dfe?v=2373153127a881db9586000c4527d981&source=copy_link",
          "mode": "url"
        },
        "returnAll": true,
        "fetchNestedBlocks": true
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        736,
        272
      ],
      "id": "09b97afe-10ee-4533-903f-9cd49b93b459",
      "name": "Get many child blocks in Notion",
      "credentials": {
        "notionApi": {
          "id": "0oqLTxSHFO2Peyee",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "content": "## phase2\nPhase 2 will be where it will be integrated with hubspot crm and i can use it so send message to clients through whatsapp,craft email for my clients,semd them portfolo everything should work with voice\n",
        "height": 384,
        "width": 704,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1440,
        -224
      ],
      "id": "1bf794d6-50ec-442c-aef3-c01ad02c68a0",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "### Workflow Summary – Telegram → AI Assistant → Output\n\nTrigger\n\nTelegram Trigger: Starts workflow when a user sends a voice message.\n\nFile Handling\n\nHTTP Request: Get file_id info from Telegram API.\n\nHTTP Request1: Download the actual .ogg voice file using file_path.\n\nTranscription & Translation\n\nTranslate a recording (OpenAI): Converts the audio into English text.\n\nAI Processing\n\nAI Agent (LangChain):\n\nActs as the personal business assistant.\n\nHandles calendar scheduling, task creation, status updates, and team availability.\n\nIntegrates with Google Calendar, Jibble, Jira, and Notion.\n\nGoogle Gemini Chat Model: Provides reasoning/LLM responses to support the AI Agent.\n\nActions / Tools\n\nGoogle Calendar: Creates calendar events.\n\nCheck Jibble Availability: Gets team availability (disabled in current flow).\n\nJira Tool: Creates Jira issues (disabled).\n\nNotion Tools: Append tasks or fetch blocks (to-do list integration).\n\nResponse to User\n\nGenerate audio (OpenAI TTS): Converts AI Agent’s text response back into audio.\n\nSend audio (Telegram): Sends the reply audio file back to the user in Telegram.\n\nKey Notes\n\nVoice → Text (translation) → AI reasoning → Action (Calendar/Tasks/Availability) → Response back in Audio.\n\nDefault rules:\n\nMeetings = 1 hr, Calls = 30 min.\n\nPKT timezone.\n\nHandles Urdu/English mix with business context.\n\nDisabled but available: Jira tasks + Jibble availability + Notion updates.",
        "height": 1232,
        "width": 656
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1392,
        -352
      ],
      "id": "04000753-aa3f-4ec4-bf0a-606d5a346bd2",
      "name": "Sticky Note1"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Translate a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Translate a recording": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Generate audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate audio": {
      "main": [
        [
          {
            "node": "Send an audio file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Check Jibble Availability": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create an issue in Jira Software": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Append a block in Notion": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many child blocks in Notion": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9eabd928-a9ec-454c-bebd-8aa0be217326",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b282b647ba2ffad28abf16e64f235c99d093d07eb5ad462e233c8361107e2b9d"
  },
  "id": "efa1HDpeY1SllA5n",
  "tags": []
}