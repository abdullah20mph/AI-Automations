{
  "name": "Main Workflow Bimmer Palace automation",
  "nodes": [
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8",
          "mode": "list",
          "cachedResultName": "Bimmer Palace Data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Fillout Form Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Email": "={{ $json.body.submission.questions[1].value }}",
            "Full Name": "={{ $json.body.submission.questions[0].value }}",
            "Phone Numbers": "={{ $json.body.submission.questions[2].value }}",
            "Model And Year": "={{ $json.body.submission.questions[3].value }}",
            "How Soon do you need service": "={{ $json.body.submission.questions[5].value }}",
            "Service": "={{ $json.body.submission.questions[4].value }}",
            "Timestamp": "={{ $json.body.submission.submissionTime }}"
          },
          "matchingColumns": [
            "Email"
          ],
          "schema": [
            {
              "id": "Full Name",
              "displayName": "Full Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone Numbers",
              "displayName": "Phone Numbers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Model And Year",
              "displayName": "Model And Year",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "How Soon do you need service",
              "displayName": "How Soon do you need service",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Service",
              "displayName": "Service",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Replied",
              "displayName": "Replied",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message ID",
              "displayName": "message ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Thread ID",
              "displayName": "Thread ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "whatsapp reply",
              "displayName": "whatsapp reply",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "WhatsApp Message",
              "displayName": "WhatsApp Message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "WhatsApp Time",
              "displayName": "WhatsApp Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "WhatsApp Message ID",
              "displayName": "WhatsApp Message ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Message Type",
              "displayName": "Message Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "8b1e9839-bd72-4537-90e1-aadcfa0996a2",
      "name": "Log to Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        256,
        -16
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "DQKrWeLKwLS7syQo",
          "name": "Bimmer Google Sheet"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "DSzqn90hBU2wPvSq",
          "mode": "list",
          "cachedResultName": "Bimmer Palace — Email Automation"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Full Name": "={{ $('Webhook2').item.json.body.submission.questions[0].value }}",
            "Service": "={{ $('Webhook2').item.json.body.submission.questions[4].value }}",
            "Email": "={{ $('Webhook2').item.json.body.submission.questions[1].value }}",
            "Phone Numbers": "={{ $('Webhook2').item.json.body.submission.questions[2].value }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Full Name",
              "displayName": "Full Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "Service",
              "displayName": "Service",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone Numbers",
              "displayName": "Phone Numbers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        480,
        -112
      ],
      "id": "e0ae676c-7fa1-4d24-97c5-fa9de3c7a2d3",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "zIcIL9i8EZobmIfq",
          "mode": "list",
          "cachedResultName": "Bimmer Palace — Whatsapp Message Followup"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone Numbers": "={{ $json['Phone Numbers'] }}"
          },
          "matchingColumns": [
            "Phone Numbers"
          ],
          "schema": [
            {
              "id": "Phone Numbers",
              "displayName": "Phone Numbers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        480,
        80
      ],
      "id": "bb439278-9428-4db7-af1a-97dc330bf5f8",
      "name": "Whatsapp Workflow"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status\": \"success\",\n  \"message\": \"Lead nurture sequence initiated\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        256,
        176
      ],
      "id": "0bc8530f-9b03-46ae-81a0-70abc42c7e5c",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "6cefc8e7-fedc-4d7f-9957-6bf4cde7b498",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        32,
        80
      ],
      "id": "16672336-e76a-4bad-9bbc-97d361fe965e",
      "name": "Webhook2",
      "webhookId": "6cefc8e7-fedc-4d7f-9957-6bf4cde7b498"
    },
    {
      "parameters": {
        "jsCode": "// Enhanced email extraction - get sender email, message content, and classify message type\nconst messages = $input.all();\nconst emailList = [];\n\n// Function to classify message type based on content\nfunction classifyMessageType(subject, body) {\n  const content = (subject + ' ' + body).toLowerCase();\n  \n  // Price inquiry keywords\n  const priceKeywords = [\n    'price', 'cost', 'quote', 'pricing', 'budget', 'fee', 'rate', 'charge',\n    'expensive', 'cheap', 'affordable', 'money', 'payment', 'bill',\n    'estimate', 'quotation', 'how much', 'what does it cost', 'price list'\n  ];\n  \n  // General inquiry keywords\n  const generalKeywords = [\n    'information', 'details', 'tell me about', 'interested in', 'learn more',\n    'available', 'service', 'product', 'help', 'support', 'question',\n    'inquiry', 'enquiry', 'more info', 'what is', 'how does', 'can you'\n  ];\n  \n  // Complaint/issue keywords\n  const complaintKeywords = [\n    'problem', 'issue', 'complaint', 'not working', 'broken', 'error',\n    'disappointed', 'unhappy', 'refund', 'cancel', 'unsatisfied'\n  ];\n  \n  // Booking/appointment keywords\n  const bookingKeywords = [\n    'appointment', 'booking', 'schedule', 'reserve', 'book', 'meeting',\n    'consultation', 'session', 'visit', 'time slot'\n  ];\n  \n  // Check for price inquiry\n  if (priceKeywords.some(keyword => content.includes(keyword))) {\n    return 'Price Inquiry';\n  }\n  \n  // Check for complaint\n  if (complaintKeywords.some(keyword => content.includes(keyword))) {\n    return 'Complaint/Issue';\n  }\n  \n  // Check for booking\n  if (bookingKeywords.some(keyword => content.includes(keyword))) {\n    return 'Booking/Appointment';\n  }\n  \n  // Check for general inquiry\n  if (generalKeywords.some(keyword => content.includes(keyword))) {\n    return 'General Inquiry';\n  }\n  \n  // Default classification\n  return 'Other';\n}\n\n// Function to extract email body text\nfunction extractEmailBody(msg) {\n  let body = '';\n  \n  // Try different ways to get the email body\n  if (msg.snippet) {\n    body = msg.snippet;\n  } else if (msg.payload) {\n    if (msg.payload.body && msg.payload.body.data) {\n      // Decode base64 if needed\n      try {\n        body = Buffer.from(msg.payload.body.data, 'base64').toString('utf-8');\n      } catch (e) {\n        body = msg.payload.body.data;\n      }\n    } else if (msg.payload.parts) {\n      // Handle multipart messages\n      for (const part of msg.payload.parts) {\n        if (part.mimeType === 'text/plain' && part.body && part.body.data) {\n          try {\n            body = Buffer.from(part.body.data, 'base64').toString('utf-8');\n            break;\n          } catch (e) {\n            // Continue to next part\n          }\n        }\n      }\n    }\n  }\n  \n  // Clean up the body text\n  return body.replace(/\\r?\\n/g, ' ').trim();\n}\n\n// Function to extract subject\nfunction extractSubject(msg) {\n  if (msg.subject) {\n    return msg.subject;\n  } else if (msg.payload && msg.payload.headers) {\n    const subjectHeader = msg.payload.headers.find(h => \n      h.name && h.name.toLowerCase() === 'subject'\n    );\n    return subjectHeader ? subjectHeader.value : '';\n  }\n  return '';\n}\n\nmessages.forEach(message => {\n  const msg = message.json;\n  let senderEmail = null;\n  \n  // Try to get email from From field first\n  if (msg.From) {\n    senderEmail = msg.From;\n  } else if (msg.payload && msg.payload.headers) {\n    // Get from headers if From field is not available\n    const fromHeader = msg.payload.headers.find(h => \n      h.name && h.name.toLowerCase() === 'from'\n    );\n    if (fromHeader) {\n      senderEmail = fromHeader.value;\n    }\n  }\n  \n  if (senderEmail) {\n    // Clean email - extract just the email address part\n    const emailMatch = senderEmail.match(/<([^>]+)>/);\n    const cleanEmail = emailMatch ? emailMatch[1] : senderEmail;\n    \n    // Extract message content\n    const subject = extractSubject(msg);\n    const body = extractEmailBody(msg);\n    const messageType = classifyMessageType(subject, body);\n    \n    emailList.push({\n      messageId: msg.id,\n      senderEmail: cleanEmail.toLowerCase().trim(),\n      subject: subject,\n      messageBody: body,\n      messageType: messageType,\n      receivedTime: new Date().toISOString(),\n      // Keep original sender format for reference\n      originalSender: senderEmail\n    });\n  }\n});\n\nreturn emailList;"
      },
      "id": "9cef3862-a5a7-4f74-aa97-aad335eba01f",
      "name": "Extract Sender Emails",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Enhanced Simple Email Match - passes through all message data\n// This will ONLY return items that have matches, so no IF node needed\n\nconst newEmails = $('Extract Sender Emails').all().map(item => item.json);\nconst allLeads = $input.all().map(item => item.json);\n\n// Filter leads that haven't replied yet\nconst unrepliedLeads = allLeads.filter(lead => {\n  const replied = lead.Replied;\n  return !replied || replied === '' || replied.toLowerCase() === 'no';\n});\n\nconst matches = [];\n\n// Check each new email against our lead list\nnewEmails.forEach(email => {\n  const matchingLead = unrepliedLeads.find(lead => {\n    if (!lead.Email) return false;\n    return lead.Email.toLowerCase().trim() === email.senderEmail;\n  });\n  \n  if (matchingLead) {\n    matches.push({\n      leadEmail: matchingLead.Email,\n      leadName: matchingLead['Full Name'] || 'Unknown',\n      messageId: email.messageId,\n      receivedTime: email.receivedTime,\n      // Pass through all message data from Extract Sender Emails node\n      subject: email.subject,\n      messageBody: email.messageBody,\n      messageType: email.messageType,\n      originalSender: email.originalSender,\n      senderEmail: email.senderEmail\n    });\n  }\n});\n\n// Only return matches - if no matches, return empty array (stops the workflow)\nreturn matches;"
      },
      "id": "ea9831ff-8ecc-4ec0-9062-29a4ed9a72e4",
      "name": "Simple Email Match",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        704,
        400
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8",
          "mode": "list",
          "cachedResultName": "Bimmer Palace Data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Fillout Form Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Replied": "YES",
            "Email": "={{ $json.leadEmail }}",
            "message ID": "={{ $json.messageId }}",
            "Message Type": "={{ $json.messageType }}",
            "email reply": "={{ $json.messageBody }}"
          },
          "matchingColumns": [
            "Email"
          ],
          "schema": [
            {
              "id": "Full Name",
              "displayName": "Full Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Phone Numbers",
              "displayName": "Phone Numbers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Model And Year",
              "displayName": "Model And Year",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "How Soon do you need service",
              "displayName": "How Soon do you need service",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Service",
              "displayName": "Service",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Replied",
              "displayName": "Replied",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email reply",
              "displayName": "email reply",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "message ID",
              "displayName": "message ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Thread ID",
              "displayName": "Thread ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "WhatsApp Message",
              "displayName": "WhatsApp Message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "WhatsApp Time",
              "displayName": "WhatsApp Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "WhatsApp Message ID",
              "displayName": "WhatsApp Message ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Message Type",
              "displayName": "Message Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "whatsapp session ID",
              "displayName": "whatsapp session ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "5da19484-58db-436d-9f4f-204c3df894b2",
      "name": "Update Replied to YES",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        928,
        400
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "DQKrWeLKwLS7syQo",
          "name": "Bimmer Google Sheet"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8",
          "mode": "list",
          "cachedResultName": "Bimmer Palace Data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Fillout Form Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8/edit#gid=0"
        },
        "options": {}
      },
      "id": "c658fb5d-8b00-4699-a80b-a160811004fe",
      "name": "Get All Leads1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        480,
        400
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "DQKrWeLKwLS7syQo",
          "name": "Bimmer Google Sheet"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "9a413845-69a7-4f0c-96a1-7f86b87cf6a5",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        32,
        720
      ],
      "id": "392e3152-de7c-4c32-81f5-7e54de8223db",
      "name": "Webhook",
      "webhookId": "9a413845-69a7-4f0c-96a1-7f86b87cf6a5"
    },
    {
      "parameters": {
        "jsCode": "// Extract WhatsApp message from WaSender webhook\nconst webhookData = $input.first().json;\n\n// Get the message data from the webhook structure\nconst messageData = webhookData.body.data.messages;\n\n// Skip if message is from me\nif (messageData.key.fromMe) {\n  return null;\n}\n\n// Extract message body from conversation\nlet messageBody = '';\nif (messageData.message && messageData.message.conversation) {\n  messageBody = messageData.message.conversation;\n}\n  // Check for extended text message (like your example)\nelse if (messageData.message.extendedTextMessage && messageData.message.extendedTextMessage.text) {\n    messageBody = messageData.message.extendedTextMessage.text;\n  }\n\nelse {\n  messageBody = 'No message found';\n}\n\n// Extract phone number and clean it\nlet whatsappFrom = messageData.key.remoteJid.replace('@s.whatsapp.net', '');\nif (!whatsappFrom.startsWith('+')) {\n  whatsappFrom = '+' + whatsappFrom;\n}\n\n// Extract sender name\nconst senderName = messageData.pushName || 'Unknown';\n\n// Get sessionId from webhook\nconst sessionId = webhookData.body.sessionId;\n\n// Get timestamp\nconst receivedTime = new Date(webhookData.body.timestamp).toISOString();\n\n// Simple message type detection\nconst messageText = String(messageBody).toLowerCase();\nlet messageType = 'general';\n\nif (messageText.includes('price') || messageText.includes('pricing') || messageText.includes('cost') || messageText.includes('how much') || messageText.includes('quote') || messageText.includes('estimate') || messageText.includes('rates') || messageText.includes('fees') || messageText.includes('budget') || messageText.includes('expensive') || messageText.includes('cheap')) {\n  messageType = 'pricing';\n} else if (messageText.includes('yes') || messageText.includes('interested') || messageText.includes('book') || messageText.includes('schedule') || messageText.includes('appointment') || messageText.includes('call me') || messageText.includes('sounds good') || messageText.includes('lets do it') || messageText.includes('when can') || messageText.includes('available')) {\n  messageType = 'positive';\n} else if (messageText.includes('problem') || messageText.includes('issue') || messageText.includes('complaint') || messageText.includes('not working') || messageText.includes('broken') || messageText.includes('error') || messageText.includes('help') || messageText.includes('fix') || messageText.includes('repair')) {\n  messageType = 'complaint';\n} else if (messageText.includes('thank') || messageText.includes('thanks') || messageText.includes('appreciate') || messageText.includes('great job') || messageText.includes('excellent') || messageText.includes('amazing') || messageText.includes('perfect') || messageText.includes('love it')) {\n  messageType = 'appreciation';\n} else if (messageText.includes('hello') || messageText.includes('hi') || messageText.includes('hey') || messageText.includes('good morning') || messageText.includes('good afternoon') || messageText.includes('good evening') || messageText.includes('how are you') || messageText.includes('whats up')) {\n  messageType = 'greeting';\n} else if (messageText.includes('cancel') || messageText.includes('refund') || messageText.includes('not interested') || messageText.includes('no thanks') || messageText.includes('dont want') || messageText.includes('stop') || messageText.includes('unsubscribe')) {\n  messageType = 'negative';\n} else if (messageText.includes('location') || messageText.includes('address') || messageText.includes('where are you') || messageText.includes('directions') || messageText.includes('how to reach') || messageText.includes('map')) {\n  messageType = 'location';\n} else if (messageText.includes('hours') || messageText.includes('open') || messageText.includes('closed') || messageText.includes('timing') || messageText.includes('what time') || messageText.includes('when do you')) {\n  messageType = 'hours';\n}\n\nreturn {\n  whatsappFrom: whatsappFrom,\n  senderName: senderName,\n  messageBody: messageBody,\n  receivedTime: receivedTime,\n  messageType: messageType,\n  messageId: messageData.key.id,\n  sessionId: sessionId\n};"
      },
      "id": "3571c43d-c6f5-47e2-97d3-62e0a70f8aa2",
      "name": "Parse WhatsApp Reply Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        624
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8",
          "mode": "list",
          "cachedResultName": "Bimmer Palace Data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Fillout Form Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8/edit#gid=0"
        },
        "options": {}
      },
      "id": "1fdeedde-b445-45ee-bf4c-ea8986fc851a",
      "name": "Get All Leads for WhatsApp",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        480,
        624
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "DQKrWeLKwLS7syQo",
          "name": "Bimmer Google Sheet"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Match WhatsApp reply with lead data\nconst whatsappReply = $('Parse WhatsApp Reply Data').first().json;\nconst allLeads = $input.all().map(item => item.json);\n\n// Skip if no WhatsApp data (filtered out message)\nif (!whatsappReply) {\n  return null;\n}\n\n// Find matching lead by phone number\nconst matchingLead = allLeads.find(lead => {\n  if (!lead['Phone Numbers']) return false;\n  \n  // Clean lead phone number for comparison\n  let leadPhone = lead['Phone Numbers'].toString();\n  leadPhone = leadPhone.replace(/[^0-9]/g, ''); // Remove all non-digits\n  \n  // Clean WhatsApp phone for comparison\n  let whatsappPhone = whatsappReply.whatsappFrom.replace(/[^0-9]/g, '');\n  \n  // Match last 10 digits (handles country codes)\n  const leadLast10 = leadPhone.slice(-10);\n  const whatsappLast10 = whatsappPhone.slice(-10);\n  \n  return leadLast10 === whatsappLast10;\n});\n\nif (matchingLead) {\n  return {\n    matchFound: true,\n    leadEmail: matchingLead.Email,\n    leadName: matchingLead['Full Name'] || 'Customer',\n    leadPhone: matchingLead['Phone Numbers'],\n    whatsappReplyData: whatsappReply\n  };\n} else {\n  return {\n    matchFound: false,\n    whatsappReplyData: whatsappReply,\n    reason: 'No matching lead found for WhatsApp: ' + whatsappReply.whatsappFrom\n  };\n}"
      },
      "id": "f4a73c42-2caa-4124-82f0-28cdfbe80ff1",
      "name": "Match WhatsApp Number to Lead",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        704,
        624
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8",
          "mode": "list",
          "cachedResultName": "Bimmer Palace Data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Fillout Form Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1__bhgO_RjJuhAY2buy9zWEaclpjUKyedRXNjTEISYE8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone Numbers": "={{ $json.whatsappReplyData.whatsappFrom }}",
            "WhatsApp Time": "={{ $json.whatsappReplyData.receivedTime }}",
            "WhatsApp Message ID": "={{ $json.whatsappReplyData.messageId }}",
            "Message Type": "={{ $json.whatsappReplyData.messageType }}",
            "WhatsApp Message": "={{ $json.whatsappReplyData.messageBody }}",
            "Replied": "YES",
            "whatsapp session ID": "={{ $json.whatsappReplyData.sessionId }}"
          },
          "matchingColumns": [
            "Phone Numbers"
          ],
          "schema": [
            {
              "id": "Full Name",
              "displayName": "Full Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Phone Numbers",
              "displayName": "Phone Numbers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Model And Year",
              "displayName": "Model And Year",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "How Soon do you need service",
              "displayName": "How Soon do you need service",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Service",
              "displayName": "Service",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Replied",
              "displayName": "Replied",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email reply",
              "displayName": "email reply",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message ID",
              "displayName": "message ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Thread ID",
              "displayName": "Thread ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "WhatsApp Message",
              "displayName": "WhatsApp Message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "WhatsApp Time",
              "displayName": "WhatsApp Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "WhatsApp Message ID",
              "displayName": "WhatsApp Message ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Message Type",
              "displayName": "Message Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "whatsapp session ID",
              "displayName": "whatsapp session ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "6a6f4d83-e9f5-4bb1-ade6-880c4d4f9c2e",
      "name": "Update WhatsApp Reply Status",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1152,
        624
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "DQKrWeLKwLS7syQo",
          "name": "Bimmer Google Sheet"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "condition1",
              "leftValue": "={{ $json.matchFound }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a33ec03d-387b-4564-a62a-b0cfa5abcff5",
      "name": "Check if Lead Matched",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        928,
        624
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status\": \"success\",\n  \"message\": \"WhatsApp message received and processed\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        256,
        816
      ],
      "id": "6712d6ab-429b-464a-9ac0-bd33ef7e9380",
      "name": "Respond to Webhook3"
    },
    {
      "parameters": {
        "content": "## Whatsapp response tracker !!\n",
        "height": 528,
        "width": 2048
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -160,
        592
      ],
      "id": "18816dc1-a25d-4438-bbc7-0ac25dc0c14e",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Gmail tracker node\n",
        "height": 176,
        "width": 2048
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -144,
        384
      ],
      "id": "47b1f785-c7ad-4022-a1e7-10a14d43ff5f",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "### this is the main Node Which controls the email n whatsap automation follow ups\n\n",
        "height": 656,
        "width": 2048
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -144,
        -304
      ],
      "id": "23007c74-edad-4366-a2b2-97524891e4c3",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {
          "readStatus": "unread"
        }
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        32,
        400
      ],
      "id": "1302ada1-6467-4d41-97a3-106933076397",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "YUyAoF5PbyTPOEcF",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $json['message ID'] }}",
        "message": "=<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            margin: 0;\n            padding: 20px;\n        }\n        .container {\n            max-width: 600px;\n            margin: 0 auto;\n        }\n        .header {\n            margin-bottom: 20px;\n        }\n        .consultation-box {\n            background-color: #f8f9fa;\n            border: 2px solid #007bff;\n            border-radius: 8px;\n            padding: 20px;\n            margin: 20px 0;\n            text-align: center;\n        }\n        .phone-icon {\n            font-size: 20px;\n            margin-right: 8px;\n        }\n        .cta-button {\n            display: inline-block;\n            background-color: #007bff;\n            color: white;\n            padding: 12px 24px;\n            text-decoration: none;\n            border-radius: 5px;\n            font-weight: bold;\n            margin: 15px 0;\n        }\n        .cta-button:hover {\n            background-color: #0056b3;\n        }\n        .benefits-list {\n            text-align: left;\n            margin: 15px 0;\n        }\n        .benefits-list li {\n            margin: 8px 0;\n            padding-left: 5px;\n        }\n        .no-pressure {\n            font-style: italic;\n            color: #666;\n            margin: 15px 0;\n        }\n        .signature {\n            margin-top: 30px;\n            border-top: 1px solid #eee;\n            padding-top: 20px;\n        }\n        .highlight {\n            background-color: #fff3cd;\n            padding: 2px 4px;\n            border-radius: 3px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <p>I completely understand - you want to know pricing before moving forward.</p>\n            <p><strong>That's smart!</strong></p>\n        </div>\n        \n        <p>Since BMW service pricing depends on several factors (your specific model, year, current condition, and exact service needs), the best way to get you accurate pricing is through a quick consultation with our BMW specialist.</p>\n        \n        <div class=\"consultation-box\">\n            <h3><span class=\"phone-icon\">📞</span>Book a free pricing consultation:</h3>\n            <a href=\"https://calendly.com/bimmerplacellc/new-meeting\" class=\"cta-button\">SCHEDULE YOUR CONSULTATION</a>\n            \n            <div class=\"benefits-list\">\n                <p><strong>During this brief call, our specialist will:</strong></p>\n                <ul>\n                    <li>Ask about your specific BMW and service needs</li>\n                    <li>Provide accurate pricing estimates</li>\n                    <li>Answer any questions you have</li>\n                </ul>\n            </div>\n            \n            <p class=\"no-pressure\">\n                <strong>No pressure - just information</strong>\n            </p>\n            \n            <p>This usually takes just <span class=\"highlight\">10-15 minutes</span> and you'll have the exact numbers you need to make your decision.</p>\n        </div>\n        \n        <p><strong>Ready to get your pricing?</strong><br>\n        Book here: <a href=\"https://calendly.com/bimmerplacellc/new-meeting\">https://calendly.com/bimmerplacellc/new-meeting</a></p>\n        \n        <div class=\"signature\">\n            <p>Best regards,<br>\n            <strong>Bimmer Place Team</strong></p>\n        </div>\n    </div>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1376,
        400
      ],
      "id": "ed8c5f4a-e02f-4d8c-bb51-4ad5ee54cd2a",
      "name": "Reply to a message",
      "webhookId": "9800aaff-4eb6-42e1-8fe5-8ff63464c60c",
      "credentials": {
        "gmailOAuth2": {
          "id": "YUyAoF5PbyTPOEcF",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e7f681d4-dcf5-4d9f-8df4-adc2a894e854",
              "leftValue": "={{ $json['Message Type'] }}",
              "rightValue": "Price Inquiry",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1152,
        400
      ],
      "id": "99565304-bc12-47b3-857d-aa326ef580f7",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4195a5ee-84c5-4eff-b5d7-4ea1cc43f053",
              "leftValue": "={{ $json[\"Message Type\"] }}",
              "rightValue": "pricing",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1376,
        624
      ],
      "id": "bce94750-ef39-4d08-a127-0493e0ef2db7",
      "name": "message type check"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://wasenderapi.com/api/send-message",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{ $json['Phone Numbers'] }}"
            },
            {
              "name": "text",
              "value": "=Hi, I completely understand you need pricing! Since BMW service costs vary by model/service,\nplease book a quick call with our specialist for accurate estimates: \nhttps://calendly.com/bimmerplacellc/new-meeting\nReply STOP to opt out."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1600,
        624
      ],
      "id": "a9d020bd-0b66-4bc5-87d9-56533946e91b",
      "name": "Send welcome message Wapp1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "wOWKJL8XSdrj9Kzb",
          "name": "Bimmer Whatsapp"
        }
      }
    },
    {
      "parameters": {
        "content": "Bimmer Palace Complete Automation Suite - DocumentationSystem Overview\nA comprehensive lead management ecosystem for BMW service business with 4 interconnected workflows handling lead capture, response tracking, email nurturing, and WhatsApp follow-ups.Workflow 1: Main Lead Management & Response Tracking\nPurpose: Central hub that captures leads and tracks all responses across channelsCore Functions:\n\nLead Capture: Fillout form webhook → Google Sheets storage\nDual Channel Launch: Triggers both email and WhatsApp workflows\nResponse Monitoring:\n\nGmail trigger (every minute) for email replies\nWhatsApp webhook for incoming messages\n\n\nSmart Matching: Links responses back to original leads\nAuto-Responses: Price inquiry detection triggers booking messages\nKey Features:\n\nMessage classification (pricing, general, complaint, etc.)\nUpdates \"Replied\" status to prevent duplicate follow-ups\nHandles both email and WhatsApp response tracking in one workflow\n",
        "height": 480,
        "width": 496,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        784,
        -208
      ],
      "id": "b21cd345-44ec-4394-ba84-ba249088997e",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "System Integration & Flow\nLead Journey:\n\nForm Submission → Main workflow logs to Google Sheets\nImmediate Response → Both email and WhatsApp welcome messages\nParallel Sequences → 4-email + 4-WhatsApp campaigns run simultaneously\nResponse Monitoring → Any reply stops both sequences\nSmart Responses → Price inquiries trigger booking-focused replies\n\nData Management:\n\nCentral Database: Single Google Sheet tracks everything\nDeduplication: \"Replied\" field prevents sequence overlap\nMessage Classification: AI-powered categorization for targeted responses\nMulti-channel Tracking: Email, WhatsApp, and form data in one place\n\nReply Intelligence:\n\nEmail: Gmail API monitors for responses\nWhatsApp: Webhook captures incoming messages\nClassification: Keywords determine message type (pricing, positive, complaint, etc.)\nAuto-Responses: Price inquiries get Calendly booking messages\n\n\nKey Strengths\nComprehensive Coverage:\n\nCaptures leads across multiple touchpoints\nMaintains engagement through two primary channels\nTracks all customer interactions centrally\n\nSmart Automation:\n\nPrevents message fatigue with reply detection\nPersonalizes responses based on message type\nRespectful opt-out handling\n\nBusiness Impact:\n\nConverts form fills into booked consultations\nMaintains professional brand presence\nReduces manual follow-up work\nProvides detailed interaction analytics\n\nTechnical Sophistication:\n\nMulti-workflow coordination\nReal-time response tracking\nMessage classification AI\nMobile-optimized content\n\nResult: A complete lead-to-booking automation system that nurtures prospects across email and WhatsApp while intelligently stopping outreach when customers respond, maximizing conversion while maintaining professionalism.",
        "height": 1296,
        "width": 368,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -544,
        -256
      ],
      "id": "fab47ded-0638-4ed5-8143-4043c089196e",
      "name": "Sticky Note4"
    }
  ],
  "pinData": {},
  "connections": {
    "Log to Google Sheets1": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          },
          {
            "node": "Whatsapp Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log to Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Sender Emails": {
      "main": [
        [
          {
            "node": "Get All Leads1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Email Match": {
      "main": [
        [
          {
            "node": "Update Replied to YES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Replied to YES": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Leads1": {
      "main": [
        [
          {
            "node": "Simple Email Match",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Parse WhatsApp Reply Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse WhatsApp Reply Data": {
      "main": [
        [
          {
            "node": "Get All Leads for WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Leads for WhatsApp": {
      "main": [
        [
          {
            "node": "Match WhatsApp Number to Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Match WhatsApp Number to Lead": {
      "main": [
        [
          {
            "node": "Check if Lead Matched",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update WhatsApp Reply Status": {
      "main": [
        [
          {
            "node": "message type check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Lead Matched": {
      "main": [
        [
          {
            "node": "Update WhatsApp Reply Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Extract Sender Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Reply to a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "message type check": {
      "main": [
        [
          {
            "node": "Send welcome message Wapp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "98f6d29c-577a-4822-b2f7-a8d797e17de5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fb8b211dfa388d0801350a6c5b17c205d694932f4fa50fa723c269df3e6279eb"
  },
  "id": "XO6OFZa2hFFiyIGU",
  "tags": []
}